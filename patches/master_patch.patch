diff --git a/build/vs_toolchain.py b/build/vs_toolchain.py
index 93a04ceb27d04671efddc245fc4e57ec388112da..683d6dce475462785fd365e373ca090de88e9799 100755
--- a/build/vs_toolchain.py
+++ b/build/vs_toolchain.py
@@ -153,6 +153,7 @@ def DetectVisualStudioPath():
     # For now we use a hardcoded default with an environment variable override.
     for path in (
         os.environ.get('vs2017_install'),
+        r'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise',
         r'C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional',
         r'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community'):
       if path and os.path.exists(path):
diff --git a/chrome/BUILD.gn b/chrome/BUILD.gn
index cf36e40ee5426464cee670a11128a0e11ca49efd..58681c91fc82f889916ad080e8f23472eaff86ac 100644
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -1417,6 +1417,7 @@ if (is_win) {
 group("browser_dependencies") {
   public_deps = [
     "//chrome/browser",
+    "//brave/browser",
     "//chrome/common",
     "//components/sync",
   ]
diff --git a/chrome/browser/browser_process.h b/chrome/browser/browser_process.h
index 77cd9e948514e875e636da465f60136ebd510491..fd587778baca0a6885dd143f6ad390d28bb27af8 100644
--- a/chrome/browser/browser_process.h
+++ b/chrome/browser/browser_process.h
@@ -47,6 +47,10 @@ namespace safe_browsing {
 class SafeBrowsingService;
 }
 
+namespace brave_shields {
+class BaseBraveShieldsService;
+}
+
 namespace subresource_filter {
 class ContentRulesetService;
 }
@@ -271,6 +275,10 @@ class BrowserProcess {
 
   virtual net_log::ChromeNetLog* net_log() = 0;
 
+  virtual brave_shields::BaseBraveShieldsService* ad_block_service() = 0;
+  virtual brave_shields::BaseBraveShieldsService*
+    tracking_protection_service() = 0;
+
   virtual component_updater::ComponentUpdateService* component_updater() = 0;
 
   virtual CRLSetFetcher* crl_set_fetcher() = 0;
diff --git a/chrome/browser/browser_process_impl.cc b/chrome/browser/browser_process_impl.cc
index 675e9220b5fe7b71240ac28ab4e4fb97fae6fd96..4b3ac3eebf6609d1c7de666e679b9d3265fb998f 100644
--- a/chrome/browser/browser_process_impl.cc
+++ b/chrome/browser/browser_process_impl.cc
@@ -34,7 +34,10 @@
 #include "base/time/default_clock.h"
 #include "base/time/default_tick_clock.h"
 #include "base/trace_event/trace_event.h"
+#include "brave/components/brave_shields/browser/brave_resource_dispatcher_host_delegate.h"
 #include "build/build_config.h"
+#include "brave/components/brave_shields/browser/ad_block_service.h"
+#include "brave/components/brave_shields/browser/tracking_protection_service.h"
 #include "chrome/browser/chrome_browser_main.h"
 #include "chrome/browser/chrome_child_process_watcher.h"
 #include "chrome/browser/chrome_content_browser_client.h"
@@ -954,6 +957,25 @@ net_log::ChromeNetLog* BrowserProcessImpl::net_log() {
   return net_log_.get();
 }
 
+brave_shields::BaseBraveShieldsService*
+BrowserProcessImpl::ad_block_service() {
+  if (ad_block_service_)
+    return ad_block_service_.get();
+
+  ad_block_service_ = brave_shields::AdBlockServiceFactory();
+  return ad_block_service_.get();
+}
+
+brave_shields::BaseBraveShieldsService*
+BrowserProcessImpl::tracking_protection_service() {
+  if (tracking_protection_service_)
+    return tracking_protection_service_.get();
+
+  tracking_protection_service_ =
+    brave_shields::TrackingProtectionServiceFactory();
+  return tracking_protection_service_.get();
+}
+
 component_updater::ComponentUpdateService*
 BrowserProcessImpl::component_updater() {
   if (component_updater_)
@@ -1004,7 +1026,7 @@ BrowserProcessImpl::supervised_user_whitelist_installer() {
 
 void BrowserProcessImpl::ResourceDispatcherHostCreated() {
   resource_dispatcher_host_delegate_ =
-      base::MakeUnique<ChromeResourceDispatcherHostDelegate>();
+      base::MakeUnique<BraveResourceDispatcherHostDelegate>();
   ResourceDispatcherHost::Get()->SetDelegate(
       resource_dispatcher_host_delegate_.get());
 
diff --git a/chrome/browser/browser_process_impl.h b/chrome/browser/browser_process_impl.h
index 454080193dbbb41b6bea01416f28f210b26aaff0..c5a60fe4f2def6f8ecdbcf0900bf9c789180a711 100644
--- a/chrome/browser/browser_process_impl.h
+++ b/chrome/browser/browser_process_impl.h
@@ -143,6 +143,9 @@ class BrowserProcessImpl : public BrowserProcess,
 #endif
 
   net_log::ChromeNetLog* net_log() override;
+  brave_shields::BaseBraveShieldsService* ad_block_service() override;
+  brave_shields::BaseBraveShieldsService*
+    tracking_protection_service() override;
   component_updater::ComponentUpdateService* component_updater() override;
   CRLSetFetcher* crl_set_fetcher() override;
   component_updater::PnaclComponentInstaller* pnacl_component_installer()
@@ -310,6 +313,10 @@ class BrowserProcessImpl : public BrowserProcess,
   void RestartBackgroundInstance();
 #endif  // defined(OS_WIN) || (defined(OS_LINUX) && !defined(OS_CHROMEOS))
 
+  std::unique_ptr<brave_shields::BaseBraveShieldsService> ad_block_service_;
+  std::unique_ptr<brave_shields::BaseBraveShieldsService>
+    tracking_protection_service_;
+
   // component updater is normally not used under ChromeOS due
   // to concerns over integrity of data shared between profiles,
   // but some users of component updater only install per-user.
diff --git a/chrome/browser/plugins/plugin_finder.cc b/chrome/browser/plugins/plugin_finder.cc
index 75c6ecab9a8d0d770141f7d3aaa6d18ddf249192..e8277e7b498ed475020aafaf8b84f1c3dd2bc779 100644
--- a/chrome/browser/plugins/plugin_finder.cc
+++ b/chrome/browser/plugins/plugin_finder.cc
@@ -298,8 +298,9 @@ void PluginFinder::ReinitializePlugins(
       !plugin_it.IsAtEnd(); plugin_it.Advance()) {
     const base::DictionaryValue* plugin = NULL;
     const std::string& identifier = plugin_it.key();
+    LOG(ERROR) << "identifier: " << identifier;
     if (plugin_list->GetDictionaryWithoutPathExpansion(identifier, &plugin)) {
-      DCHECK(identifier_plugin_.find(identifier) == identifier_plugin_.end());
+      // DCHECK(identifier_plugin_.find(identifier) == identifier_plugin_.end());
       identifier_plugin_[identifier] = CreatePluginMetadata(identifier, plugin);
 
       if (installers_.find(identifier) == installers_.end())
diff --git a/third_party/widevine/cdm/BUILD.gn b/third_party/widevine/cdm/BUILD.gn
index a3eac59cc2ebdb1f9d2bb7af8a7db0d44ab315a9..11d0c86fb7cdfc1881f563552fb6f5c5abdabae4 100644
--- a/third_party/widevine/cdm/BUILD.gn
+++ b/third_party/widevine/cdm/BUILD.gn
@@ -113,9 +113,10 @@ if (widevine_cdm_binary_files != []) {
     if (is_mac) {
       ldflags = [
         # Not to strip important symbols by -Wl,-dead_strip.
-        "-Wl,-exported_symbol,_PPP_GetInterface",
-        "-Wl,-exported_symbol,_PPP_InitializeModule",
-        "-Wl,-exported_symbol,_PPP_ShutdownModule",
+        # "-Wl,-exported_symbol,_PPP_GetInterface",
+        # "-Wl,-exported_symbol,_PPP_InitializeModule",
+        # "-Wl,-exported_symbol,_PPP_ShutdownModule",
+        "-Wl,-install_name,@loader_path/libwidevinecdm.dylib",
       ]
       #TODO(jrummell) Mac: 'DYLIB_INSTALL_NAME_BASE': '@loader_path',
     } else if (is_posix && !is_mac) {
